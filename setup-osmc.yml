---
  - hosts: all
    roles:
    - cmprescott.xml
    remote_user: osmc

    vars:

      sshd_config: /etc/ssh/sshd_config
      kodi_base: /home/osmc/.kodi
      kodi_gui_settings: "{{ kodi_base }}/userdata/guisettings.xml"
      kodi_addon_data: "{{ kodi_base }}/userdata/addon_data"
      kodi_addon_database: "{{ kodi_base }}/userdata/Database/Addons20.db"
      system_user: osmc
      sqlite3: /usr/osmc/bin/sqlite3

    pre_tasks:

    - name: stop kodi
      become: yes
      service: name=mediacenter state=stopped
    - name: install dependencies
      become: yes
      apt: name=python-lxml state=latest

    tasks:

    # configure sshd

    - name: Place my public ssh key
      authorized_key: user="{{ system_user }}" key="{{ lookup('file', './files/authorized_keys.myuser.pub') }}"
    - name: Disable password login
      become: yes
      replace: dest={{ sshd_config }} regexp="#PasswordAuthentication yes" replace="PasswordAuthentication no"
      notify:
        - restart sshd

    # configure kodi

    - name: switch gui to expert mode
      replace: dest={{ kodi_gui_settings }} regexp="<settinglevel>1</settinglevel>" replace="<settinglevel>3</settinglevel>"
    - name: use confluence skin
      replace: dest={{ kodi_gui_settings }} regexp="<skin default="true">skin.osmc</skin>" replace="<skin>skin.confluence</skin>"

    # configure kodi - TV using vdr backend

    - name: make sure pvr.vdr.vnsi plugin directory exists
      file: path={{ kodi_addon_data }}/pvr.vdr.vnsi state=directory
    - name: configure pvr.vdr.vnsi plugin
      copy: src=./files/pvr.vdr.vnsi.settings.xml dest={{ kodi_addon_data }}/pvr.vdr.vnsi/settings.xml
    - name: test if plugin is installed
      shell: echo 'SELECT count(*) FROM disabled WHERE addonID="pvr.vdr.vnsi";' | {{ sqlite3 }} .kodi/userdata/Database/Addons20.db
      register: vnsi_installed
    - name: activate plugin in addon database
      shell: echo 'DELETE FROM disabled WHERE addonID="pvr.vdr.vnsi";' | {{ sqlite3 }} {{ kodi_addon_database }}
      when: vnsi_installed.stdout == '1'
    - name: enable kodi pvr module step 1
      xml: file={{ kodi_gui_settings }} xpath=/settings/pvrmanager/enabled/@default ensure=absent
    - name: enable kodi pvr module step 2
      xml: file={{ kodi_gui_settings }} xpath=/settings/pvrmanager/enabled value=true

    handlers:

    - name: restart sshd
      become: yes
      service: name=sshd state=restarted

    post_tasks:

    - name: start kodi
      become: yes
      service: name=mediacenter state=started
